// Generated by view binder compiler. Do not edit!
package com.masadany.mvvm_hilt_unittesting.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.masadany.mvvm_hilt_unittesting.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentArtDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView artImageView;

  @NonNull
  public final EditText artistText;

  @NonNull
  public final EditText nameText;

  @NonNull
  public final Button saveButton;

  @NonNull
  public final EditText yearText;

  private FragmentArtDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView artImageView, @NonNull EditText artistText, @NonNull EditText nameText,
      @NonNull Button saveButton, @NonNull EditText yearText) {
    this.rootView = rootView;
    this.artImageView = artImageView;
    this.artistText = artistText;
    this.nameText = nameText;
    this.saveButton = saveButton;
    this.yearText = yearText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentArtDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentArtDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_art_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentArtDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.artImageView;
      ImageView artImageView = rootView.findViewById(id);
      if (artImageView == null) {
        break missingId;
      }

      id = R.id.artistText;
      EditText artistText = rootView.findViewById(id);
      if (artistText == null) {
        break missingId;
      }

      id = R.id.nameText;
      EditText nameText = rootView.findViewById(id);
      if (nameText == null) {
        break missingId;
      }

      id = R.id.saveButton;
      Button saveButton = rootView.findViewById(id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.yearText;
      EditText yearText = rootView.findViewById(id);
      if (yearText == null) {
        break missingId;
      }

      return new FragmentArtDetailsBinding((ConstraintLayout) rootView, artImageView, artistText,
          nameText, saveButton, yearText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
